import openai
import os
from twitteraccount import TwitterAccount


# [[Initialization]]

# add your own keys and tokens here
# you can get them from https://developer.twitter.com/en/apps
# and https://platform.openai.com/docs/api-reference/authentication
# my twitter account is @startupscript

# load the openai api key from the environment variables
# refer to https://platform.openai.com/docs/api-reference/authentication
openai.api_key = os.getenv("OPENAI_API_KEY")
twitter_credentials_file = "startupscript.json"


# ------------------------------
# ------------------------------

# [[Define Classes]]

# our startup twitter bot class which inherits from the TwitterAccount class
# and implements the startup script generation and tweeting

class StartupTwitterBot(TwitterAccount):

    # constructor for TwitterBot class
    # basically just calls the super constructor

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # script is the long startup script generated by openai which outputs a startup idea with steps
        self.script = None
        self.tweets = None


    # gets a startup script from openai and stores it in the member variable script
    # params: temperature - the temperature to use for the openai api
    #         max_tokens - the max tokens to use for the openai api

    def get_startup_script(self, temperature=0.9, max_tokens=3800):
        response = openai.Completion.create(
            engine="text-davinci-003",
            prompt="Write a startup idea with steps. In the first line write the name of the startup. In the second line write the problem it solves. In the third line write the solution. In the fourth line write the market. In the fifth line write the business model. In the sixth line write the revenue model. In the seventh line write the competitive advantage. In the eighth line write the team. In the ninth line write the funding. In the tenth line write the exit strategy. In the eleventh line write the first step. In the twelfth line write the second step. In the thirteenth line write the third step. In the fourteenth line write the fourth step. In the fifteenth line write the fifth step. In the sixteenth line write the sixth step. In the seventeenth line write the seventh step. In the eighteenth line write the eighth step. In the nineteenth line write the ninth step. In the twentieth line write the tenth step. Use emojis to make the startup idea more interesting.",
            temperature=temperature,
            max_tokens=max_tokens,
        )
        self.script = response.choices[0].text


    # slice the startup script into tweets
    # store the tweets in the member variable tweets list

    def neat_startup_script(self):
        # result is the list of tweets
        result=[]
        # script_lines is a list of lines in the script
        script_lines = self.script.split("\n")

        # remove empty strings and newlines because we don't need them
        for line in script_lines:
            if(line=="\n" or line == ""):
                script_lines.remove(line)

        # a while loop to slice the script into tweets
        # each tweet is at most 280 characters
        # each tweet is at least 1 line of the script
        i = 0
        while i < len(script_lines):
            # temp is the string that will be appended to the result list and will be a tweet in a series of tweets
            temp = ""
            # while the length of the tweet is less than 280 characters insert more lines into the temp string
            while((len(temp) + len(script_lines[i]))< TwitterAccount.max_tweet_length-1):
                # insert the line into the temp string
                temp += script_lines[i] + "\n"
                i += 1
                # if we have reached the end of the script break out of the loop
                if(i > len(script_lines)-1):
                    break
            result.append(temp)

        self.tweets = result


    # post the tweets in the member variable tweets

    def tweet_startup_script(self):
        self.get_startup_script()
        self.neat_startup_script()
        self.post_tweet_thread(self.tweets)
        return


# ------------------------------
# ------------------------------


# [[Main program execution]]

if __name__ == "__main__":
   
   # create a startup twitter bot object
    startup_twitter_bot = StartupTwitterBot(twitter_credentials_file)

    print("Posting a startup script...")
    # this method will post a startup script to twitter
    startup_twitter_bot.tweet_startup_script()
    print("Done!")